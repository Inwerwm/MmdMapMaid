<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>MmdMapMaid</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>MmdMapMaid</value>
  </data>
  <data name="Shell_Pmm.Content" xml:space="preserve">
    <value>Pmm Management</value>
  </data>
  <data name="Shell_Emm.Content" xml:space="preserve">
    <value>Emm Management</value>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Button_ReadPmm.Content" xml:space="preserve">
    <value>Read Pmm File</value>
  </data>
  <data name="Button_WritePmm.Content" xml:space="preserve">
    <value>Write Pmm File</value>
  </data>
  <data name="Message_PmmWriteComplete" xml:space="preserve">
    <value>Pmm file has been written.</value>
  </data>
  <data name="Message_Writing" xml:space="preserve">
    <value>Writing...</value>
  </data>
  <data name="Button_ReadDestinationPmx.Text" xml:space="preserve">
    <value>Read model of edited material order</value>
  </data>
  <data name="Button_ReadEmm.Content" xml:space="preserve">
    <value>Read EMM file</value>
  </data>
  <data name="Button_ReadSourcePmx.Text" xml:space="preserve">
    <value>Read model of original material order</value>
  </data>
  <data name="Message_EmmWriteComplete" xml:space="preserve">
    <value>Emm file has been written.</value>
  </data>
  <data name="Button_ReplaceAll.Content" xml:space="preserve">
    <value>Replace all</value>
  </data>
  <data name="Label_ReplacementText.Text" xml:space="preserve">
    <value>Replacement</value>
  </data>
  <data name="Pmm_Label_SearchQueryText.Text" xml:space="preserve">
    <value>Search query</value>
  </data>
  <data name="Label_Search.Text" xml:space="preserve">
    <value>Replace all string</value>
  </data>
  <data name="DisplayName_Accessory" xml:space="preserve">
    <value>Accessory</value>
  </data>
  <data name="DisplayName_Model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="EmmOrderMapper_DestinationPmxPath.PlaceholderText" xml:space="preserve">
    <value>Drag &amp; Drop here</value>
  </data>
  <data name="EmmOrderMapper_EmmPath.PlaceholderText" xml:space="preserve">
    <value>Drag &amp; Drop here</value>
  </data>
  <data name="EmmOrderMapper_SourcePmxPath.PlaceholderText" xml:space="preserve">
    <value>Drag &amp; Drop here</value>
  </data>
  <data name="Shell_ExtractEmd.Content" xml:space="preserve">
    <value>Emd Extraction</value>
  </data>
  <data name="Button_SelectEmdSaveDirectory.Content" xml:space="preserve">
    <value>Select folder to save EMD</value>
  </data>
  <data name="Message_EmdWriteComplete" xml:space="preserve">
    <value>Emd file has been written.</value>
  </data>
  <data name="DragAndDropPlaceHolder.Text" xml:space="preserve">
    <value>Drag &amp; Drop here</value>
  </data>
  <data name="Shell_ExtractVmd.Content" xml:space="preserve">
    <value>Vmd Extraction</value>
  </data>
  <data name="Message_VmdWriteComplete" xml:space="preserve">
    <value>Vmd file has been written.</value>
  </data>
  <data name="DragAndDropTextBox.PlaceholderText" xml:space="preserve">
    <value>Drag &amp; Drop here</value>
  </data>
  <data name="Button_SelectVmdSaveDirectory.Content" xml:space="preserve">
    <value>Select folder to save VMD</value>
  </data>
  <data name="Button_ExtractCamera.Content" xml:space="preserve">
    <value>Extract camera</value>
  </data>
  <data name="Button_ExtractLight.Content" xml:space="preserve">
    <value>With light</value>
  </data>
  <data name="Button_ExtractMorph.Content" xml:space="preserve">
    <value>Extract Morph</value>
  </data>
  <data name="Button_ExtractMotion.Content" xml:space="preserve">
    <value>Extract Motion</value>
  </data>
  <data name="Label_CameraMotion.Text" xml:space="preserve">
    <value>Camera Motion</value>
  </data>
  <data name="Label_EndFrame.Text" xml:space="preserve">
    <value>End frame</value>
  </data>
  <data name="Label_EndFrameDescription_VmdExtractor.Text" xml:space="preserve">
    <value>If EndFrame &lt; StartFrame then extract to file end.</value>
  </data>
  <data name="VmdExtractor_Settings_Frames.Text" xml:space="preserve">
    <value>Extraction Range</value>
  </data>
  <data name="VmdExtractor_Settings_Models.Text" xml:space="preserve">
    <value>Model Motion</value>
  </data>
  <data name="Label_StartFrame.Text" xml:space="preserve">
    <value>Start frame</value>
  </data>
  <data name="Label_Settings.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Shell_ReplaceVmd.Content" xml:space="preserve">
    <value>Vmd Management</value>
  </data>
  <data name="DisplayName_Morph" xml:space="preserve">
    <value>Morph</value>
  </data>
  <data name="DisplayName_Motion" xml:space="preserve">
    <value>Motion</value>
  </data>
  <data name="Button_ReadVmd.Content" xml:space="preserve">
    <value>Read Vmd File</value>
  </data>
  <data name="Button_WriteVmd.Content" xml:space="preserve">
    <value>Write Vmd File</value>
  </data>
  <data name="Switch_WithEditEmm.OffContent" xml:space="preserve">
    <value>Editing of the EMM file with the same name is disabled.</value>
  </data>
  <data name="Switch_WithEditEmm.OnContent" xml:space="preserve">
    <value>Editing of the EMM file with the same name is enabled.</value>
  </data>
  <data name="Shell_MotionLoop.Content" xml:space="preserve">
    <value>Vmd Motion Loop</value>
  </data>
  <data name="Button_Execute.Content" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="Label_Beat.Text" xml:space="preserve">
    <value>Beat</value>
  </data>
  <data name="Label_BeatDescription_MotionLoop.Text" xml:space="preserve">
    <value>Set the number of beats per quarter.</value>
  </data>
  <data name="Label_BPM.Text" xml:space="preserve">
    <value>BPM</value>
  </data>
  <data name="Label_Frequency.Text" xml:space="preserve">
    <value>Frequency</value>
  </data>
  <data name="Label_FrequencyDescription_MotionLoop.Text" xml:space="preserve">
    <value>Set how many beats to plot once per.</value>
  </data>
  <data name="Label_LoopCount.Text" xml:space="preserve">
    <value>Loop Count</value>
  </data>
  <data name="Label_LoopCountDescription_MotionLoop.Text" xml:space="preserve">
    <value>Set the count of loop times for the plot.</value>
  </data>
  <data name="Label_PlotCount.Text" xml:space="preserve">
    <value>Plot Count</value>
  </data>
  <data name="Label_PlotCountOffset.Text" xml:space="preserve">
    <value>Plot Count Offset</value>
  </data>
  <data name="Label_PlotCountOffsetDescription_MotionLoop.Text" xml:space="preserve">
    <value>Directly increase or decrease the plot count.</value>
  </data>
  <data name="Label_PlotInterval.Text" xml:space="preserve">
    <value>Plot Interval</value>
  </data>
  <data name="Button_OpenDestinationFolder.Content" xml:space="preserve">
    <value>Open destination folder</value>
  </data>
  <data name="Switch_UseRegex.OffContent" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Switch_UseRegex.OnContent" xml:space="preserve">
    <value>Use Regex</value>
  </data>
  <data name="Button_ResetAll.Content" xml:space="preserve">
    <value>Reset All</value>
  </data>
  <data name="Shell_MorphInterpolation.Content" xml:space="preserve">
    <value>Vmd Morph Interpolation</value>
  </data>
  <data name="Label_Accuracy.Text" xml:space="preserve">
    <value>Approximation Accuracy</value>
  </data>
  <data name="Label_TrueCurveOpacity.Text" xml:space="preserve">
    <value>True Curve Opacity</value>
  </data>
  <data name="Label_FrameLength.Text" xml:space="preserve">
    <value>Frame Length</value>
  </data>
  <data name="TextBox_MorphName.PlaceholderText" xml:space="preserve">
    <value>Morph Name</value>
  </data>
  <data name="Button_ReadPmx.Content" xml:space="preserve">
    <value>Read Pmx File</value>
  </data>
  <data name="Log_SavePath" xml:space="preserve">
    <value>Save Path</value>
  </data>
  <data name="Shell_VmdRangeEdit.Content" xml:space="preserve">
    <value>Vmd Range Edit</value>
  </data>
</root>